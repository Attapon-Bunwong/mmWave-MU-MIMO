% ---------------- BASIC PARAMETERS ------------------------------------- %
detLocation      = true;  % Determine if location is deterministic
useCasesLocation = true;  % Determines if the location is useCase based. For further information about use cases, check o_generate_positions.
useCaseLocation   = 4;    % Defines the use case (1,2,3,4,5,6)
% ----------------------------------------------------------------------- %

% ---------------- OPTIMIZATION PARAMETERS ------------------------------ %
algorithm      = GA;  % Genetic -> 'GA'; PatternSearch -> 'PS' (Not stable); Particle Swarm Optimization -> 'PSO'  (Not stable)
Fweights       = [0.7 0.3 0];  % Weights used for objective function for each user alloc. subproblem [Prx Interference Beamwidth]
solver         = 'BestOrRemove';  % Solver 'LuckAndChoice' or 'BestOrRemove'
ObjFunc        = 'compute_avCap_maxminthr_LAC';  % Objective function for 'LuckAndChoice'
RefineSolution = false;  % Sets whether we want to refine the solution given for a certain group of users when there is room for improvement
findLobes      = false;  % Sets whether we want to compare our internal beamwidth function with findLobes computations
randomSolution = false;  % If set to true, the Alg. 1 solution is random
MinObjFIsSNR   = true;  % Sets whether f_heuristics will work with SINR or capacities
nUsersMin      = 1;  % Sets the minimum number of users to be considered when exploring all the combinations possible (script get_all_feasible_combs)
genStructure   = onlyAssigned;  % Sets the data structure for the Algorithm 1 solver (either genetic or pattern) 'onlyAssigned' recommended
NoCut          = false;
feasibility    = true;
% ---------------- EXTRA PARAMETERS ------------------------------------- %
NumPhaseShifterBits      = 60;     % Controls the number of bits available to control the weights' phases (set to 0 for unrestricted)
NbitsAmplitude           = 60;     % Controls the number of bits available to control the weights' amplitudes (set to 0 for unrestricted)
percMutatedGens          = 30;     % Percentage of gens modified every mutation
mutationImpact           = 0.2;    % Standard deviation of the normal distribution used in the mutation
PopulationSize_Data      = 30;     % Heuristics
EliteCount_Data          = 7;      % Heuristics
CrossoverFraction_Data   = 0.3;    % Heuristics
Maxgenerations_Data      = 150;    % Maximum number of Generations in the algorithm
MaxStallgenerations_Data = 15;     % Maximum number of Generations after which, if not outperforming previous generations, stop the algorithm
FunctionTolerance_Data   = 1e-5;   % Heuristics stops when not improving solution by this much
GArndImpact              = 0;      % GA-rnd sub-heuristics impact (random modifications introduced) on final GA solution
GArndmodifyAmpl          = false;  % GA-rnd sub-heuristics: modify also the amplitudes?
% ----------------------------------------------------------------------- %

% ---------------- CHANNEL PARAMETERS ----------------------------------- %
Use5GChannel   = true;  % Sets whether we use a real 5G 3GPP TR 138 901 complaint channel or a basic one
multiPath      = false;  % Multi-path channel or LOS channel. The former requires information of the paths in the input file
DelayProfile   = 'CDL-C';  % Sets the channel delay profile ('AWGN, 'CDL-A', 'CDL-B', 'CDL-C', 'CDL-D', 'CDL-E')
% ----------------------------------------------------------------------- %

% ---------------- DEBUGGING PARAMETERS --------------------------------- %
verbosity      = 0;  % Verbosity level (0 no output, 1 some informative output, 2 DEBUG mode)
% ----------------------------------------------------------------------- %

% ---------------- PLOTTING PARAMETERS ---------------------------------- %
PlotAssignments    = false;  % Sets whether we want to plot the polar plots of the antenna radiation patterns for each user (function parse_antenna_assignment). You should check if conf.PlotAssignments is TRUE. (TIME consuming)
IncludeBeamPattern = false;  % Sets whether we want to compute the beam pattern for every single solution (MUST be true if conf.PlotAssignments == true) (TIME consuming)
PlotCombinations   = false;  % Sets whether we want to plot all the combinations in get_all_feasible_combs
PlotDisplacements  = false;  % Sets whether we want to plot the antenna selection displacements for every <user,Nmax> combination in Alg. 2 (getComb function) (TIME and MEMORY consuming)
figIdx             = 100;  % Sets the initial figure Id for combination of assignments' plots (to avoid collisions with radiation pattern plots)
plotAssignmentInitialAndFinal = false;  % Sets wether we want to plot the initial and final assignments for every <user,Nmax> combination in Alg. 1
% ----------------------------------------------------------------------- %

% EOF
